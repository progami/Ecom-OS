// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          String    @default("warehouse_staff")
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  accounts      Account[]
  sessions      Session[]
  permissions   Permission[]
  
  @@index([email])
}

// NextAuth required models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Permission model for role-based access
model Permission {
  id        String   @id @default(cuid())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// WMS Models (existing)
model Warehouse {
  id                    String              @id @default(cuid())
  name                  String
  address               String?
  coordinates           String?
  type                  String              @default("standard")
  isActive              Boolean             @default(true)
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  
  locations             Location[]
  transactions          Transaction[]
  warehouseConfigs      WarehouseConfig[]
  storageLedgerEntries  StorageLedgerEntry[]
  
  @@index([name])
}

model Location {
  id            String        @id @default(cuid())
  warehouseId   String
  name          String
  type          String
  capacity      Int?
  isActive      Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  warehouse     Warehouse     @relation(fields: [warehouseId], references: [id])
  inventory     Inventory[]
  
  @@unique([warehouseId, name])
  @@index([warehouseId])
}

model Product {
  id            String        @id @default(cuid())
  sku           String        @unique
  name          String
  description   String?
  category      String?
  unitOfMeasure String        @default("unit")
  isActive      Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  inventory     Inventory[]
  transactions  Transaction[]
  
  @@index([sku])
  @@index([name])
}

model Inventory {
  id                String              @id @default(cuid())
  productId         String
  locationId        String
  quantity          Decimal
  batchNumber       String?
  expiryDate        DateTime?
  lastUpdated       DateTime            @default(now())
  
  product           Product             @relation(fields: [productId], references: [id])
  location          Location            @relation(fields: [locationId], references: [id])
  attributeValues   AttributeValue[]
  
  @@unique([productId, locationId, batchNumber])
  @@index([productId])
  @@index([locationId])
  @@index([batchNumber])
}

model Transaction {
  id                String              @id @default(cuid())
  type              String
  productId         String
  warehouseId       String
  quantity          Decimal
  batchNumber       String?
  referenceNumber   String?
  notes             String?
  status            String              @default("pending")
  createdAt         DateTime            @default(now())
  createdBy         String?
  
  product           Product             @relation(fields: [productId], references: [id])
  warehouse         Warehouse           @relation(fields: [warehouseId], references: [id])
  attachments       Attachment[]
  attributeValues   AttributeValue[]
  
  @@index([type])
  @@index([productId])
  @@index([warehouseId])
  @@index([referenceNumber])
  @@index([createdAt])
}

model Attachment {
  id            String        @id @default(cuid())
  transactionId String
  fileName      String
  fileType      String
  fileSize      Int
  fileUrl       String
  uploadedAt    DateTime      @default(now())
  
  transaction   Transaction   @relation(fields: [transactionId], references: [id])
  
  @@index([transactionId])
}

model Attribute {
  id            String          @id @default(cuid())
  name          String          @unique
  dataType      String
  isRequired    Boolean         @default(false)
  defaultValue  String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  
  values        AttributeValue[]
  
  @@index([name])
}

model AttributeValue {
  id            String        @id @default(cuid())
  attributeId   String
  value         String
  transactionId String?
  inventoryId   String?
  createdAt     DateTime      @default(now())
  
  attribute     Attribute     @relation(fields: [attributeId], references: [id])
  transaction   Transaction?  @relation(fields: [transactionId], references: [id])
  inventory     Inventory?    @relation(fields: [inventoryId], references: [id])
  
  @@index([attributeId])
  @@index([transactionId])
  @@index([inventoryId])
}

model WarehouseConfig {
  id                  String              @id @default(cuid())
  warehouseId         String
  configType          String
  configValue         String
  isActive            Boolean             @default(true)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  
  warehouse           Warehouse           @relation(fields: [warehouseId], references: [id])
  invoiceTemplates    InvoiceTemplate[]
  
  @@unique([warehouseId, configType])
  @@index([warehouseId])
}

model InvoiceTemplate {
  id                String            @id @default(cuid())
  name              String
  warehouseConfigId String
  templateData      String
  isDefault         Boolean           @default(false)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  warehouseConfig   WarehouseConfig   @relation(fields: [warehouseConfigId], references: [id])
  
  @@index([warehouseConfigId])
}

model Rate {
  id                String            @id @default(cuid())
  name              String
  type              String
  value             Decimal
  unit              String
  warehouseId       String?
  startDate         DateTime
  endDate           DateTime?
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  @@index([type])
  @@index([warehouseId])
  @@index([startDate, endDate])
}

model Invoice {
  id                String            @id @default(cuid())
  invoiceNumber     String            @unique
  type              String
  status            String            @default("draft")
  amount            Decimal
  dueDate           DateTime?
  paidDate          DateTime?
  data              String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  @@index([invoiceNumber])
  @@index([status])
  @@index([type])
}

model StorageLedgerEntry {
  id                String            @id @default(cuid())
  warehouseId       String
  productSku        String
  date              DateTime
  openingBalance    Decimal
  receipts          Decimal
  shipments         Decimal
  closingBalance    Decimal
  averageBalance    Decimal
  storageRate       Decimal
  storageCost       Decimal
  handlingCost      Decimal
  totalCost         Decimal
  createdAt         DateTime          @default(now())
  
  warehouse         Warehouse         @relation(fields: [warehouseId], references: [id])
  
  @@unique([warehouseId, productSku, date])
  @@index([warehouseId])
  @@index([productSku])
  @@index([date])
}

// Bookkeeping Models
model CategorizationRule {
  id              String    @id @default(cuid())
  name            String
  description     String?
  pattern         String?
  category        String
  subcategory     String?
  isActive        Boolean   @default(true)
  priority        Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([category])
  @@index([isActive])
}

model BookkeepingTransaction {
  id              String    @id @default(cuid())
  date            DateTime
  description     String
  amount          Decimal
  type            String    // debit or credit
  category        String?
  subcategory     String?
  accountName     String
  referenceNumber String?
  notes           String?
  isReconciled    Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([date])
  @@index([category])
  @@index([accountName])
  @@index([isReconciled])
}