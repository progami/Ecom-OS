name: Deploy to Production

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '18'

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          echo "🚀 Starting deployment..."
          
          echo "📁 Navigating to application directory..."
          cd /home/ecom-os
          
          echo "🔄 Pulling latest changes from main branch..."
          git fetch origin
          git reset --hard origin/main
          
          echo "📦 Installing dependencies..."
          npm ci --production=false
          
          echo "🔨 Building application..."
          npm run build
          
          echo "🔄 Restarting application with PM2..."
          pm2 restart targon-frontend
          
          echo "💾 Saving PM2 configuration..."
          pm2 save
          
          echo "✅ Deployment completed successfully!"
          echo "📊 Application status:"
          pm2 list

    - name: Health Check
      run: |
        echo "Waiting for application to start..."
        sleep 30
        
        # Check if site is accessible
        response=$(curl -s -o /dev/null -w "%{http_code}" https://targonglobal.com || echo "000")
        if [ "$response" = "200" ]; then
          echo "✅ Site is up and running!"
        else
          echo "⚠️ Site returned HTTP $response"
          echo "This might be normal if nginx configuration needs manual update"
        fi