name: WMS Integration Tests

on:
  push:
    branches:
      - main
      - 'integration/wms-*'
  pull_request:
    branches:
      - main
    paths:
      - 'app/wms/**'
      - 'app/api/v1/wms/**'
      - 'components/wms/**'
      - 'lib/wms/**'
      - 'prisma/schema.prisma'
      - 'package.json'

jobs:
  test:
    name: Run WMS Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecom_os_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ecom_os_test
        run: |
          npx prisma generate
          npx prisma migrate deploy

      - name: Run type checking
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ecom_os_test
          NEXTAUTH_SECRET: test-secret
          NEXTAUTH_URL: http://localhost:3000
        run: npm test -- --testPathPattern=wms

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ecom_os_test
          NEXTAUTH_SECRET: test-secret
          NEXTAUTH_URL: http://localhost:3000
        run: npm test -- --testPathPattern=integration/wms

  build:
    name: Build WMS Module
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ecom_os
          NEXTAUTH_SECRET: build-secret
        run: npm run build

      - name: Check build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed - no .next directory found"
            exit 1
          fi

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for exposed secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD